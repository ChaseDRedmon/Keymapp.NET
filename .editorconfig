# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# Avalonia AXAML Files
[{*.axaml,*.json,*.csproj,*.props}]
indent_size = 2
indent_style = space
tab_width = 2

end_of_line = crlf
insert_final_newline = false

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = false
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_property = false

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members

# Expression-level preferences
dotnet_style_coalesce_expression = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true
dotnet_style_namespace_match_folder = true
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_collection_expression = when_types_loosely_match
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_interpolation = true

# Field preferences
dotnet_style_readonly_field = true

# Parameter preferences
dotnet_code_quality_unused_parameters = all:silent

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = true
dotnet_style_allow_statement_immediately_after_block_experimental = true

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false
csharp_style_var_for_built_in_types = false
csharp_style_var_when_type_is_apparent = false

# Expression-bodied members
csharp_style_expression_bodied_accessors = true
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_indexers = true
csharp_style_expression_bodied_lambdas = true
csharp_style_expression_bodied_local_functions = false
csharp_style_expression_bodied_methods = false
csharp_style_expression_bodied_operators = false
csharp_style_expression_bodied_properties = true

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_extended_property_pattern = true
csharp_style_prefer_not_pattern = true
csharp_style_prefer_pattern_matching = true
csharp_style_prefer_switch_expression = true

# Null-checking preferences
csharp_style_conditional_delegate_call = true

# Modifier preferences
csharp_prefer_static_local_function = true
csharp_preferred_modifier_order = public, private, protected, internal, file, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, required, volatile, async
csharp_style_prefer_readonly_struct = true
csharp_style_prefer_readonly_struct_member = true

# Code-block preferences
csharp_prefer_braces = true
csharp_prefer_simple_using_statement = true
csharp_style_namespace_declarations = file_scoped
csharp_style_prefer_method_group_conversion = true
csharp_style_prefer_primary_constructors = true
csharp_style_prefer_top_level_statements = true

# Expression-level preferences
csharp_prefer_simple_default_expression = true
csharp_style_deconstructed_variable_declaration = true
csharp_style_implicit_object_creation_when_type_is_apparent = true
csharp_style_inlined_variable_declaration = true
csharp_style_prefer_index_operator = true
csharp_style_prefer_local_over_anonymous_function = true
csharp_style_prefer_null_check_over_type_check = true
csharp_style_prefer_range_operator = true
csharp_style_prefer_tuple_swap = true
csharp_style_prefer_utf8_string_literals = true
csharp_style_throw_expression = true
csharp_style_unused_value_assignment_preference = discard_variable
csharp_style_unused_value_expression_statement_preference = discard_variable

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = true
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true
csharp_style_allow_embedded_statements_on_same_line_experimental = true

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

# Naming styles

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

#.NET Analyzer Rules
dotnet_diagnostic.CA1852.severity = warning # Seal Classes

# Disable Meziantou.Analyzer rules that duplicate CA rules
dotnet_diagnostic.MA0001.severity = none # Duplicate of CA1307/CA1309/CA1310
dotnet_diagnostic.MA0005.severity = none # Duplicate of CA1825
dotnet_diagnostic.MA0010.severity = none # Duplicate of CA1018
dotnet_diagnostic.MA0011.severity = none # Duplicate of CA1304/CA1305
dotnet_diagnostic.MA0012.severity = none # Duplicate of CA2201
dotnet_diagnostic.MA0013.severity = none # Duplicate of CA1058
dotnet_diagnostic.MA0014.severity = none # Duplicate of CA2201
dotnet_diagnostic.MA0015.severity = none # Duplicate of CA2208
dotnet_diagnostic.MA0020.severity = none # Duplicate of CA1826
dotnet_diagnostic.MA0027.severity = none # Duplicate of CA2200
dotnet_diagnostic.MA0028.severity = none # Duplicate of CA1830/CA1834
dotnet_diagnostic.MA0039.severity = none # Duplicate of CA5359
dotnet_diagnostic.MA0047.severity = none # Duplicate of CA1050
dotnet_diagnostic.MA0049.severity = none # Duplicate of CA1724
dotnet_diagnostic.MA0056.severity = none # Duplicate of CA2214
dotnet_diagnostic.MA0057.severity = none # Duplicate of CA1710
dotnet_diagnostic.MA0058.severity = none # Duplicate of CA1710
dotnet_diagnostic.MA0059.severity = none # Duplicate of CA1710
dotnet_diagnostic.MA0062.severity = none # Duplicate of CA2217
dotnet_diagnostic.MA0069.severity = none # Duplicate of CA2211
dotnet_diagnostic.MA0072.severity = none # Duplicate of CA1065 and CA2219
dotnet_diagnostic.MA0074.severity = none # Duplicate of CA1307/CA1309/CA1310
dotnet_diagnostic.MA0082.severity = none # Duplicate of CA2242
dotnet_diagnostic.MA0086.severity = none # Duplicate of CA1065
dotnet_diagnostic.MA0095.severity = none # Duplicate of CA1067
dotnet_diagnostic.MA0097.severity = none # Duplicate of CA1036

# IDisposableAnalyzers rules
dotnet_diagnostic.IDISP001.severity = warning # Dispose created
dotnet_diagnostic.IDISP002.severity = warning # Dispose member
dotnet_diagnostic.IDISP003.severity = warning # Dispose previous before re-assigning
dotnet_diagnostic.IDISP004.severity = warning # Don't ignore created IDisposable
dotnet_diagnostic.IDISP005.severity = warning # Return type should indicate disposal
dotnet_diagnostic.IDISP006.severity = warning # Implement IDisposable
dotnet_diagnostic.IDISP007.severity = warning # Don't dispose injected
dotnet_diagnostic.IDISP008.severity = warning # Don't assign member with mixed disposables
dotnet_diagnostic.IDISP009.severity = warning # Add IDisposable interface
dotnet_diagnostic.IDISP010.severity = warning # Call base.Dispose(disposing)
dotnet_diagnostic.IDISP011.severity = warning # Don't return disposed instance
dotnet_diagnostic.IDISP012.severity = warning # Property should not return created disposable
dotnet_diagnostic.IDISP013.severity = warning # Await in using
dotnet_diagnostic.IDISP014.severity = info # Use a single instance of HttpClient
dotnet_diagnostic.IDISP015.severity = warning # Member should not return mixed instances
dotnet_diagnostic.IDISP016.severity = warning # Don't use disposed instance
dotnet_diagnostic.IDISP017.severity = suggestion # Prefer using
dotnet_diagnostic.IDISP018.severity = warning # Call SuppressFinalize (with finalizer)
dotnet_diagnostic.IDISP019.severity = warning # Call SuppressFinalize (with virtual dispose)
dotnet_diagnostic.IDISP020.severity = warning # Call SuppressFinalize(this)
dotnet_diagnostic.IDISP021.severity = warning # Call this.Dispose(true)
dotnet_diagnostic.IDISP022.severity = warning # Call this.Dispose(false)
dotnet_diagnostic.IDISP023.severity = warning # Don't use reference types in finalizer
dotnet_diagnostic.IDISP024.severity = warning # Don't call SuppressFinalize unnecessarily
dotnet_diagnostic.IDISP025.severity = warning # Class with no virtual dispose should be sealed
dotnet_diagnostic.IDISP026.severity = warning # Class with no virtual DisposeAsyncCore should be sealed

# Microsoft.VisualStudio.Threading.Analyzers rules
# Critical Threading Rules
dotnet_diagnostic.VSTHRD001.severity = error # Avoid legacy thread switching methods
dotnet_diagnostic.VSTHRD002.severity = error # Avoid problematic synchronous waits
dotnet_diagnostic.VSTHRD003.severity = error # Avoid awaiting foreign Tasks
dotnet_diagnostic.VSTHRD004.severity = error # Await SwitchToMainThreadAsync
dotnet_diagnostic.VSTHRD010.severity = error # Invoke single-threaded types on Main thread
dotnet_diagnostic.VSTHRD011.severity = error # Use AsyncLazy<T>
dotnet_diagnostic.VSTHRD012.severity = error # Provide JoinableTaskFactory where allowed

# Advisory Threading Rules
dotnet_diagnostic.VSTHRD100.severity = warning # Avoid async void methods
dotnet_diagnostic.VSTHRD101.severity = warning # Avoid unsupported async delegates
dotnet_diagnostic.VSTHRD102.severity = info # Implement internal logic asynchronously
dotnet_diagnostic.VSTHRD103.severity = warning # Call async methods when in an async method
dotnet_diagnostic.VSTHRD104.severity = info # Offer async option
dotnet_diagnostic.VSTHRD105.severity = warning # Avoid method overloads that assume TaskScheduler.Current
dotnet_diagnostic.VSTHRD106.severity = warning # Use InvokeAsync to raise async events
dotnet_diagnostic.VSTHRD107.severity = error # Await Task within using expression
dotnet_diagnostic.VSTHRD108.severity = warning # Assert thread affinity unconditionally
dotnet_diagnostic.VSTHRD109.severity = error # Switch instead of assert in async methods
dotnet_diagnostic.VSTHRD110.severity = warning # Observe result of async calls
dotnet_diagnostic.VSTHRD111.severity = silent # Use .ConfigureAwait(bool)
dotnet_diagnostic.VSTHRD112.severity = info # Implement System.IAsyncDisposable
dotnet_diagnostic.VSTHRD113.severity = info # Check for System.IAsyncDisposable
dotnet_diagnostic.VSTHRD114.severity = warning # Avoid returning null from Task-returning method
dotnet_diagnostic.VSTHRD115.severity = warning # Avoid JoinableTaskContext with explicit null SynchronizationContext
dotnet_diagnostic.VSTHRD200.severity = warning # Use Async suffix for async methods

